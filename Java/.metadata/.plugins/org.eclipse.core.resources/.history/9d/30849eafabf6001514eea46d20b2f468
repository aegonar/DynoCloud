package com.dynocloud.api;

import java.math.BigInteger;
import java.security.SecureRandom;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.util.ArrayList;
import java.util.Random;

import javax.annotation.Priority;
import javax.ws.rs.Consumes;
import javax.ws.rs.NotAuthorizedException;
//import javax.ws.rs.NotFoundException;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import javax.ws.rs.ext.Provider;
import javax.ws.rs.Priorities;



@Path("/logout")
@Priority(Priorities.AUTHENTICATION)
public class Logout implements ContainerRequestFilter{

	@Override
	@POST
    @Produces("application/json")
    public void filter(ContainerRequestContext requestContex) {

		System.out.println("logout [POST]");
		
        // Get the HTTP Authorization header from the request
        String authorizationHeader = 
        		requestContex.getHeaderString(HttpHeaders.AUTHORIZATION);

        // Check if the HTTP Authorization header is present and formatted correctly 
        if (authorizationHeader == null || !authorizationHeader.startsWith("Bearer ")) {
            throw new NotAuthorizedException("Authorization header must be provided");
        }

        String token = authorizationHeader.substring("Bearer".length()).trim();

        
    	Database_connection link = new Database_connection();
     	 PreparedStatement prep_sql;
        
        try {


//        	Database_connection link = new Database_connection();
//         	 PreparedStatement prep_sql;

          	
        	  
        	  		link.Open_link();
        		

        	  		
        	  	try{
        			String query_deleteToken= "Delete FROM Session where `Token` = ?;";
        			prep_sql = link.linea.prepareStatement(query_deleteToken);
        			prep_sql.setString(1, token);
        			
        			//ResultSet rs_query_validateToken = 
        			prep_sql.executeUpdate();

        			System.out.println("logout [" + token +"]");
        			
//        			if (!rs_query_validateToken.next() ) {
//        				
//        			    System.out.println("query_validateToken no data");
//        			  throw new NotAuthorizedException("Invalid session token");
//        			  
//        			} else {
//
//        				
//            				String userid = rs_query_validateToken.getString("UserID");
//            				System.out.println("rs_query_validateToken user idenfied: "+ userid);
//            				//UserID= userid;
//            				
//            				
//            				///////////
////            		        User currentUser = new User();
////            		        currentUser.setUserID("001");
////            		        
////            		        System.out.println("findUserID");
////            		        
//   //
////            		    	System.out.println("handleAuthenticationEvent");
////            		        this.authenticatedUser = currentUser;
//
//            				////////////
//            				
//            				
//            				
//            				//userAuthenticatedEvent.fire(UserID);

//        			}
        			

        			
        	  }catch(Exception e){

      			System.out.println("Error at query_deleteToken: " + e.getMessage());
      			
      			link.Close_link();
      			throw new NotAuthorizedException("Invalid session token");
      		}
      	
      	
      	
        	 link.Close_link();
        	
        	
        	
             Response.ok(token).build();

        } catch (Exception e) {
        	System.out.println("Error authenticating user");
             Response.status(Response.Status.UNAUTHORIZED).build();
            
        }    
   
    }

//    private void authenticate(String username, String password) throws Exception {
//        // Authenticate against a database, LDAP, file or whatever
//        // Throw an Exception if the credentials are invalid
//    	
//    	
//    	
//    	 Database_connection link = new Database_connection();
//       	 PreparedStatement prep_sql;
//
//        	System.out.println("authenticate [" + username + ", "+password+"]");
//      	  
//      	  		link.Open_link();
//      		
//
//      	  		
//      	  	try{
//      			String query_authenticate= "Select `UserID` from `Users` where `UserName` = ? and `Password` = ?;";
//      			prep_sql = link.linea.prepareStatement(query_authenticate);
//      			prep_sql.setString(1, username);
//      			prep_sql.setString(2, password);
//      			
//      			ResultSet rs_query_authenticate = prep_sql.executeQuery();
//
//      			
//      			if (!rs_query_authenticate.next() ) {
//      			    System.out.println("rs_query_authenticate no data");
//      			  throw new NotAuthorizedException("Invalid username or password");
//      			} else {
//          			//while(rs_query_authenticate.next()){
//          				String UserID = rs_query_authenticate.getString("UserID");
//          				System.out.println("rs_query_authenticate: " + UserID);
//          				//something something
//          			//}
//      			}
//      			
//
//      			
//      	  }catch(Exception e){
//
//    			System.out.println("Error at query_authenticate: " + e.getMessage());
//    			
//    			link.Close_link();
//    			throw new NotAuthorizedException("Invalid username or password");
//    		}
//    	
//    	
//    	
//      	  link.Close_link();
//    	
//
//    }
//
//    private String issueToken(String username) throws SQLException {
//        // Issue a token (can be a random String persisted to a database or a JWT token)
//        // The issued token must be associated to a user
//        // Return the issued token
//   
//   	 Database_connection link = new Database_connection();
//   	 PreparedStatement prep_sql;
//
//    	System.out.println("getUserID [" + username + "]");
//  	  
//  	  		link.Open_link();
//  		
//  	  	String UserID=null;
//  	  		
//  	  	try{
//  			String query_getUserID = "Select `UserID` from `Users` where `UserName` = ?;";
//  			prep_sql = link.linea.prepareStatement(query_getUserID);
//  			prep_sql.setString(1, username);
//  			
//  			ResultSet rs_query_getUserID = prep_sql.executeQuery();
//
//  			while(rs_query_getUserID.next()){
//  				UserID = rs_query_getUserID.getString("UserID");
//  			}
//  			
//  	  }catch(Exception e){
//
//			System.out.println("Error at query_getUserID: " + e.getMessage());
//			
//			link.Close_link();
//			throw new SQLException();
//		}
//			
//			
//	    	Random random = new SecureRandom();
//	        String token = new BigInteger(130, random).toString(32);
//	    	
//	        
//	    try{    
//  			String query_setToken = "Insert into `Session` (`UserID`,`Token`) values (?,?);";
//  			prep_sql = link.linea.prepareStatement(query_setToken);
//  			prep_sql.setString(1, UserID);
//  			prep_sql.setString(2, token);
//  			prep_sql.executeUpdate();
//  			System.out.println("issueToken [Execute Insert]");
//  			
//	        
//    }catch(Exception e){
//
//		System.out.println("Error at query_setToken: " + e.getMessage());
//		
//		link.Close_link();
//		throw new SQLException();
//	}  
//
//  	link.Close_link();
//  	
//  	
//  	return token;
//  	
//    }
    
}