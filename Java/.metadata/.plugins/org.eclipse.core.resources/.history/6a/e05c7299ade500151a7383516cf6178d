package com.vogella.jersey.first;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;


import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

// Plain old Java Object it does not extend as class or implements 
// an interface

// The class registers its methods for the HTTP GET request using the @GET annotation. 
// Using the @Produces annotation, it defines that it can deliver several MIME types,
// text, XML and HTML. 

// The browser requests per default the HTML MIME type.

//Sets the path to base URL + /hello
@Path("/hello")
public class Hello {
	
	private static Database_connection link = new Database_connection();
	private static PreparedStatement prep_sql;

  // This method is called if TEXT_PLAIN is request
  @GET
  //@Produces(MediaType.TEXT_PLAIN)
  @Produces(MediaType.TEXT_HTML)
  public String sayPlainTextHello() {
	  
	  String output = "Database: ";
	  
	  link.Open_link();
		

		
		try{
			String query_monthly_update_date = "SELECT * FROM test";
			prep_sql = link.linea.prepareStatement(query_monthly_update_date);
			//prep_sql.setString(1, ".");
			ResultSet daily_update_date = prep_sql.executeQuery();
			System.out.println("executeQuery");
				while(daily_update_date.next()){
					//daily_update_dates[i] = daily_update_date.getString("MAX(update_date)");
					output+=daily_update_date.getString("key");
					output+=" ";
					output+=daily_update_date.getString("value");
					//System.out.println("key: " + daily_update_date.getString("key") + " value: " + daily_update_date.getString("value"));
				}
		}catch(Exception e){

			System.out.println("Error: " + e.getMessage());
			
			link.Close_link();
			
			output="Error connecting to database";
			
				output="Error connecting to database";
				
			  return "<html> " + "<title>" + "DB Hello Jersey" + "</title>"
			  + "<body><h1>" + output + "</body></h1>" + "</html> ";
			
			

		}

	link.Close_link();
	  
    //return "Hello Jersey";
    //return output;
    
  return "<html> " + "<title>" + "DB Hello Jersey" + "</title>"
  + "<body><h1>" + output + "</body></h1>" + "</html> ";
  }

  // This method is called if XML is request
  @GET
  @Produces(MediaType.TEXT_XML)
  public String sayXMLHello() {
    return "<?xml version=\"1.0\"?>" + "<hello> XML Hello Jersey" + "</hello>";
  }

  // This method is called if HTML is request
//  @GET
//  @Produces(MediaType.TEXT_HTML)
//  public String sayHtmlHello() {
//    return "<html> " + "<title>" + "HTML Hello Jersey" + "</title>"
//        + "<body><h1>" + "HTML Hello Jersey" + "</body></h1>" + "</html> ";
//  }
  
  
  

} 